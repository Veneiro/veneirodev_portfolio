---
import { Section } from 'astro-boilerplate-components';

import Base from '@/templates/Base.astro';

type GetStaticPaths = {
  paginate: any;
};

// Traducciones según el idioma
const translations = {
  es: {
    present: 'Actualidad',
  },
  en: {
    present: 'Present',
  },
  // Añade más idiomas según sea necesario
};

const currentLanguage = 'es'; // Cambia esto según la lógica de tu aplicación

// Helper function to format dates
const formatDate = (date: string) => {
  if (date === 'Actualidad') {
    // return translations[currentLanguage].present; // Usar la traducción según el idioma actual
    return 'Present';
  }

  const options: Intl.DateTimeFormatOptions = {
    year: 'numeric',
    month: 'long',
  };
  return new Date(date).toLocaleDateString('en-EN', options);
};

// Esta función es requerida para rutas dinámicas
export async function getStaticPaths({ paginate }: GetStaticPaths) {
  const experienceData = await Astro.glob('./*.md'); // Ruta a tus archivos markdown
  const sortedExperience = experienceData.sort(
    (a, b) =>
      new Date(b.frontmatter.startDate).getTime() -
      new Date(a.frontmatter.startDate).getTime()
  ); // Ordenar cronológicamente

  return paginate(sortedExperience, { pageSize: 6 });
}

// Obtén los datos de la página
const { page } = Astro.props;
const sortedExperience = page.data;
---

<Base
  head={{
    title: 'Mi Experiencia Laboral',
    description: 'Resumen de mi experiencia laboral',
  }}
>
  <Section>
    <h2 class='mb-4 text-2xl font-bold'>Experiencia Laboral</h2>
    <div class='grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3'>
      {sortedExperience.map((item) => (
        <div
          class="rounded-lg bg-white p-4 shadow-lg transition-transform hover:scale-105"
          key={item.frontmatter.jobTitle}
        >
          <h3 class="text-xl font-semibold text-gray-800">
            {item.frontmatter.jobTitle}
          </h3>
          <p class="text-gray-600">{item.frontmatter.company}</p>
          <p class="text-sm text-gray-500">
            {formatDate(item.frontmatter.startDate)} -{' '}
            {formatDate(item.frontmatter.endDate)}
          </p>
          <p class="mt-2 text-gray-700">{item.frontmatter.description}</p>
        </div>
      ))}
    </div>
  </Section>
</Base>

<style>
  .card {
    background-color: #f9fafb; /* Cambia el color de fondo según tus preferencias */
    transition: transform 0.2s;
  }

  .card:hover {
    transform: scale(1.05);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  }
</style>
